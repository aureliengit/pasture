===========================
CentOS 7 Post-Install HOWTO (c) Niki Kovacs <info@microlinux.fr>
===========================

Dernière révision : 24 mai 2016

Ce HOWTO décrit la configuration post-installation d'un système CentOS 7.


  * Accord de licence
  * Démarrer le service RNGD
  * Configuration provisoire du réseau
  * Synchronisation de la grappe RAID
  * Mise à jour initiale
  * Faire le ménage dans les kernels
  * Récupérer les scripts d'installation
  * Élaguer le système
  * Configurer les dépôts de paquets
  * Installer les outils de base
  * Agrémenter la console
  * Chargeur de démarrage
  * Supprimer NetworkManager
  * Désactiver SELinux
  * Désactiver l'IPv6
  * Configurer le réseau
  * Créer un utilisateur
  * Configurer le pare-feu


Accord de licence
-----------------

Si l'on a effectué une installation avec un environnement graphique, CentOS
affiche un dialogue d'acceptation de licence au démarrage initial du système
depuis la version 7. La logique de l'affichage s'avère quelque peu déroutante.
Voici ce qu'il faut faire, dans l'ordre :

  1. Appuyer sur [1] pour afficher la licence.

  2. Appuyer sur [2] pour accepter la licence.

  3. Appuyer sur [C] pour continuer le démarrage initial.

  4. Appuyer sur [C] une deuxième fois pour confirmer le tout.


Démarrer le service RNGD
------------------------

Il se peut que tous les services du système n'aient pas démarré comme prévu :

  # systemctl status
  ● amandine
    State: degraded
     Jobs: 0 queued
   Failed: 1 units
   ...

Afficher le service fautif :

  # systemctl --failed
    UNIT         LOAD   ACTIVE SUB    DESCRIPTION
  ● rngd.service loaded failed failed Hardware RNG Entropy Gatherer Daemon

RNGD, c'est le générateur d'entropie du système. Dans sa configuration par
défaut, il se base sur un périphérique '/dev/hwrandom' qui n'existe pas sur
notre machine. Pour corriger ce comportement, il faut éditer le fichier de
configuration du service :

--8<---------- /usr/lib/systemd/system/rngd.service --------------------------
[Unit]
Description=Hardware RNG Entropy Gatherer Daemon

[Service]
ExecStart=/sbin/rngd -f -r /dev/urandom           ==> ajouter

[Install]
WantedBy=multi-user.target
--8<--------------------------------------------------------------------------

Recharger la configuration :

  # systemctl daemon-reload

Démarrer le service et vérifier son statut :

  # systemctl start rngd.service
  # systemctl status rngd.service
  ● rngd.service - Hardware RNG Entropy Gatherer Daemon
     Loaded: loaded (/usr/lib/systemd/system/rngd.service; ...


Configuration provisoire du réseau
----------------------------------

L'installation par défaut ne fournit pas la commande 'ifconfig', qui fait
partie du paquet 'net-tools'. Dans un premier temps, il faudra afficher la
configuration réseau en utilisant la commande 'ip' fournie par le paquet
'iproute2' :

  # ip link
  # ip address
  # ip route


Synchronisation de la grappe RAID
---------------------------------

La synchronisation initiale d'une grappe RAID peut être assez longue. L'astuce
suivante permet d'accélérer le processus de façon significative :

  # echo 50000 > /proc/sys/dev/raid/speed_limit_min


Mise à jour initiale
--------------------

Installer le paquet 'deltarpm', qui permet d'accélérer la procédure de mise à
jour en téléchargeant la différence binaire entre un paquet et son correctif :

  # yum install deltarpm 

Procéder à la mise à jour initiale de l'installation :

  # yum update

Redémarrer :

  # systemctl reboot


Faire le ménage dans les kernels
--------------------------------

Le paquet 'yum-utils' nous facilitera la tâche :

  # yum install yum-utils

Afficher les kernels installés :

  # rpm -q kernel
  kernel-3.10.0-327.el7.x86_64
  kernel-3.10.0-327.13.1.el7.x86_64

Supprimer l'ancien kernel :

  # package-cleanup --oldkernels --count=1

L'option '--count=x' spécifie le nombre de kernels que l'on souhaite garder.

Éditer '/etc/yum.conf' et définir le nombre de kernels à préserver :

--8<---------- /etc/yum.conf -------------------------------------------------
...
installonly_limit=2
...
--8<--------------------------------------------------------------------------


Récupérer les scripts d'installation
------------------------------------

Installer Git :

  # yum install git

Récupérer mes scripts et mes fichiers de configuration :

  # cd
  # git clone https://github.com/kikinovak/centos
  # cd centos/7.x/scripts/

Le répertoire 'centos/7.x/scripts' contient une série de scripts numérotés qui
facilitent la configuration post-installation. 


Élaguer le système
------------------

Dans certains cas, il est souhaitable d'élaguer une installation existante
pour revenir à un système de base plus épuré. Pour ce faire, je fournis le
script '00-elaguer-paquets.sh' dans le répertoire 'centos/7.x/scripts'. Ce
script se charge de supprimer tous les paquets qui ne font pas partie du
système de base à proprement parler, c'est-à-dire l'équivalent de ce que l'on
obtient lorsqu'on effectue une installation minimale. Avant de lancer le
script, il vaut mieux s'assurer de démarrer en mode console.

  # systemctl set-default multi-user.target
  # systemctl isolate multi-user.target
  # cd centos/7.x/scripts
  # ./00-elaguer-paquets.sh
  
Le script se sert de la liste de paquets 'centos/7.x/pkglists/minimal' qui a
été établie auparavant moyennant la commande suivante :

  # rpm -qa --queryformat '%{NAME}\n' | sort > minimal

Afficher la vue d'ensemble sur les groupes de paquets :

  # yum group list hidden | less

Il faudra éventuellement rectifier à la main le statut des groupes installés :

  # yum group mark remove "Core"
  # yum group mark remove "Base"


Configurer les dépôts de paquets
--------------------------------

Le script '01-configurer-depots.sh' se charge de configurer automatiquement les
dépôts que l'on utilisera. La définition des priorités empêche les paquets
officiels de se faire écraser par des paquets tiers. Pour plus de détails,
voir la documentation de 'yum-plugins-priorities'.

  - Les dépôts officiels [base], [updates] et [extras] sont activés avec une
    priorité maximale de 1.

  - Les dépôts tiers [epel] et [nux-dextop] sont activés avec une priorité
    moindre de 10.

  - Les dépôts de drivers communautaires [elrepo] sont installés et
    désactivés.

Deux remarques :

  - Même si le dépôt tiers [nux-dextop] est principalement orienté poste de
    travail, il nous permettra d'installer une poignée d’outils en ligne de
    commande comme 'unrar' ou 'rtorrent'.

  - Le dépôt [adobe-linux-x86_64] est également configuré. Il sert au seul
    paquet flash-plugin sur les postes de travail. Il ne mange pas de pain sur
    un serveur, mais si l'on souhaite s'en débarrasser, il suffit de supprimer
    manuellement le paquet 'adobe-release'.

  # ./01-configurer-depots.sh


Installer les outils de base
----------------------------

Le script '02-installer-outils.sh' installe une poignée d'outils en ligne de
commande qui ne sont pas fournis par l'installation minimale.

  # ./02-installer-outils.sh
  

Agrémenter la console
---------------------

Le script '03-configurer-base.sh' agrémente la console pour root et les
utilisateurs :

  # ./03-configurer-base.sh

Outre la personnalisation du shell, le script se charge également de peaufiner
la configuration de l'éditeur Vim.

Prendre en compte la personnalisation du shell pour root :

  # source ~/.bashrc

Récupérer manuellement la configuration du shell pour l'utilisateur créé lors
de l'installation :

  $ su - microlinux
  $ cp /etc/skel/.bash* ~
  $ source ~/.bashrc


Chargeur de démarrage
---------------------

Éditer le fichier de configuration de GRUB, en le rendant plus lisible :

--8<---------- /etc/default/grub ---------------------------------------------
GRUB_TIMEOUT=1
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="console"
GRUB_CMDLINE_LINUX="rd.lvm.lv=centos_amandine/root \
                    rd.lvm.lv=centos_amandine/swap \
                    video=1024x768 \
                    quiet"
GRUB_DISABLE_RECOVERY="true"
--8<--------------------------------------------------------------------------

  > Supprimer l'option 'rhgb' pour afficher les messages au démarrage.

  > L'option 'video=1024x768" définit la résolution de la console.

  > Éventuellement, supprimer l'affichage du menu avec GRUB_TIMEOUT=0.

Prendre en compte les modifications :

  # grub2-mkconfig -o /boot/grub2/grub.cfg


Supprimer NetworkManager
------------------------

Contrairement à ce qui se dit dans des blogs un peu partout sur le Web,
NetworkManager n'est PAS nécessaire pour la gestion du réseau. C'est juste une
couche d'abstraction et de complexité supplémentaire, et dont on peut aisément
se passer.

  # systemctl stop NetworkManager
  # yum remove NetworkManager*


Désactiver SELinux
------------------

Éditer le fichier '/etc/sysconfig/selinux' :

--8<---------- /etc/sysconfig/selinux ----------------------------------------
# /etc/sysconfig/selinux
SELINUX=disabled
#SELINUXTYPE=targeted
--8<--------------------------------------------------------------------------

La modification sera prise en compte au prochain redémarrage.


Désactiver l'IPv6
-----------------

Créer un fichier '/etc/sysctl.d/disable-ipv6.conf' et l'éditer comme ceci :

--8<---------- /etc/sysctl.d/disable-ipv6.conf -------------------------------
# Disable IPv6
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
--8<--------------------------------------------------------------------------

La désactivation de l'IPv6 peut entraîner des problèmes avec les services SSH
et Postfix. Il faut donc adapter leur configuration en conséquence.

Éditer '/etc/ssh/sshd_config' et spécifier les directives suivantes :

--8<---------- /etc/ssh/sshd_config ------------------------------------------
...
AddressFamily inet
ListenAddress 0.0.0.0
...
--8<--------------------------------------------------------------------------

  > 'inet' désigne l'IPv4 et 'inet6' l'IPv6'.

Ensuite, éditer '/etc/postfix/main.cf' et spécifier la boucle locale en IPv4 :

--8<---------- /etc/postfix/main.cf ------------------------------------------
...
inet_interfaces = 127.0.0.1
...
--8<--------------------------------------------------------------------------

Si l'on ne veut pas attendre le prochain redémarrage pour prendre en compte
les modifications, on peut faire ceci :

  # systemctl restart sshd
  # systemctl restart postfix
  # sysctl -p


Configurer le réseau
--------------------

  1. Poste de travail

Voici un exemple de configuration simple :

--8<---------- /etc/sysconfig/network-scripts/ifcfg-enp2s0 -------------------
DEVICE=enp2s0
TYPE=Ethernet
ONBOOT=yes
BOOTPROTO=dhcp
--8<--------------------------------------------------------------------------

Si l'on gère les noms d'hôtes de manière centralisée avec Dnsmasq, il faut
supprimer les occurrences correspondantes dans '/etc/hosts' :

--8<---------- /etc/hosts ----------------------------------------------------
127.0.0.1   localhost.localdomain localhost 
--8<--------------------------------------------------------------------------

Le fichier '/etc/hostname' devra juste contenir ceci :

--8<---------- /etc/hostname -------------------------------------------------
localhost
--8<--------------------------------------------------------------------------


  2. Serveur de réseau local

Dans l'exemple, l'interface 'enp2s0' se situe côté Internet :

--8<---------- /etc/sysconfig/network-scripts/ifcfg-enp2s0 -------------------
DEVICE=enp2s0
TYPE=Ethernet
ONBOOT=yes
BOOTPROTO=static
IPADDR=192.168.2.5
NETMASK=255.255.255.0
--8<--------------------------------------------------------------------------

Côté réseau local, c'est l'interface 'enp3s1' :

--8<---------- /etc/sysconfig/network-scripts/ifcfg-enp3s1 -------------------
DEVICE=enp3s1
TYPE=Ethernet
ONBOOT=yes
BOOTPROTO=static
IPADDR=192.168.3.1
NETMASK=255.255.255.0
--8<--------------------------------------------------------------------------

L'adresse IP de la passerelle sera notée dans '/etc/sysconfig/network' :

--8<---------- /etc/sysconfig/network ----------------------------------------
GATEWAY=192.168.2.1
--8<--------------------------------------------------------------------------

Renseigner le ou les serveurs DNS :

--8<---------- /etc/resolv.conf ----------------------------------------------
nameserver 192.168.2.1
--8<--------------------------------------------------------------------------

Corriger la configuration du nom d'hôte :

--8<---------- /etc/hosts ----------------------------------------------------
127.0.0.1   localhost.localdomain localhost 
192.168.3.1 amandine.sandbox.lan amandine
--8<--------------------------------------------------------------------------

Le fichier '/etc/hostname' devra juste contenir le nom d'hôte simple sans le
domaine :

--8<---------- /etc/hostname -------------------------------------------------
amandine
--8<--------------------------------------------------------------------------


Créer un utilisateur
--------------------

Pour éviter les connexions en root depuis l'extérieur, on peut éventuellement
créer un utilisateur non privilégié si cela n'a pas été fait durant
l'installation :

  # useradd -c "Microlinux" microlinux
  # passwd microlinux

Ajouter l'utilisateur au groupe 'wheel' :

  # usermod -G wheel microlinux

Éditer '/etc/pam.d/su' et décommenter la ligne qui requiert l'appartenance au
groupe 'wheel' pour acquérir les droits de root :

--8<---------- /etc/pam.d/su -------------------------------------------------
...
# Uncomment the following line to require a user to be in the "wheel" group.
auth            required        pam_wheel.so use_uid
--8<--------------------------------------------------------------------------


Pare-feu
--------

Vérifier si les paquets Iptables sont installés :

  # rpm -qa | grep iptables
  iptables-1.4.21-13.el7.x86_64
  iptables-services-1.4.21-13.el7.x86_64

Activer le service correspondant :

  # systemctl enable iptables
  # systemctl start iptables

Sous CentOS, la meilleure solution consiste à éditer un simple script Bash
pour Iptables, en enregistrant la configuration à la fin du script :

  # /usr/sbin/service iptables save

Copier le script '7.x/firewall/firewall-lan.sh' dans un endroit approprié, par
exemple '/usr/local/sbin'. Adapter le script à la configuration réseau de la
machine et aux services que l'on compte héberger dessus, puis :

  # firewall-lan.sh

Afficher la configuration du pare-feu :

  # iptables -L -v -n

Au redémarrage du serveur, les règles Iptables sont bien restaurées, mais le
relais des paquets est désactivé. Pour l'activer par défaut, on peut créer un
fichier '/etc/sysctl.d/enable-ip-forwarding.conf' comme ceci :

--8<---------- /etc/sysctl.d/enable-ip-forwarding.conf -----------------------
# Enable IP forwarding
net.ipv4.ip_forward = 1
--8<--------------------------------------------------------------------------


------------------------------------------------------------------------------
# vim: syntax=txt
